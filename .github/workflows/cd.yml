name: CD

on:
  push:
    branches: [ main, features/**,feature/** ]          # deploy only what reaches main
  workflow_dispatch:            # allow manual ‚ÄúRun workflow‚Äù

env:
  IMAGE_NAME: gradeclass-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # üîß buildx gives multi-arch & cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DH_USERNAME }}/$IMAGE_NAME:latest
            ${{ secrets.DH_USERNAME }}/$IMAGE_NAME:${{ github.sha }}
          target: final        # if you use multi-stage; omit otherwise
          cache-from: type=gha
          cache-to:   type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ success() }}        # only on green build

    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Pull & restart container on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_HOST }} <<'SSH'
            set -e
            docker pull ${{ secrets.DH_USERNAME }}/$IMAGE_NAME:latest
            docker stop gradeclass || true
            docker rm   gradeclass || true
            docker run -d --name gradeclass \
              -p 9696:9696 -p 5000:5000 -p 4200:4200 \
              -e MLFLOW_BACKEND_URI=sqlite:////app/code/mlflow.db \
              -e MLFLOW_ARTIFACT_ROOT=file:///app/code/mlartifacts \
              ${{ secrets.DH_USERNAME }}/$IMAGE_NAME:latest